# This is a basic workflow to help you get started with Actions

name: ApplicationTest

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout the project
        uses: actions/checkout@master
      
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      
      - name: Install dependancies
        run: |
          pip install -r requirements.txt
          
      - name: Bump the version
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          PYPI_USERNAME: ${{ secrets.PYPI_USERNAME }}
          PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}    
        run: |
          echo "bumping version"
          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"
          bash ci_tools/bumpversion.sh
          bash ci_tools/publish.sh "$PYPI_USERNAME" "$PYPI_PASSWORD"
          
      - name: Get new package version
        run: |
         curl https://raw.githubusercontent.com/finbourne/lusid-python-tools/master/__version__.py | grep __version__ |  awk '{split($0, a, "="); print a[2]}' | tr -d ' "' >> $PYPI_VERSION
          
      - name: Slack notification
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: workflow,job,commit,repo,ref,author,took
          custom_payload: |
            {
            username: 'github-actions-tests',
            icon_emoji: ':octocat:',
            attachments: [{
              color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
              text: `${process.env.AS_REPO} version ${process.env.PYPI_VERSION} has been published to PyPi`
            }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
        if: success()
