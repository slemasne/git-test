# This is a basic workflow to help you get started with Actions

name: ApplicationTestWithSlack

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  pull_request:
    branches: [ master ]
  push:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

#   run-black-formatter:
#     strategy:
#       max-parallel: 1
#     runs-on: ubuntu-latest
#     timeout-minutes: 30
    
#     steps:
#       - uses: actions/checkout@v2
#       - uses: "actions/setup-python@v2"
#         with:
#           python-version: "3.7"
          
#       - name: Install dependancies
#         run: |
#           pip install black==19.10b0
          
#       - name: Run formatter
#         run: |
#           black .
          
#       - name: setup git config
#         run: |
#           # setup the username and email. I tend to use 'GitHub Actions Bot' with no email by default
#           git config user.name "GitHub Actions Bot"
#           git config user.email "<>"
          
#       - name: commit
#         run: |
#           git commit -ma "new date commit"
#           git push origin master
     
  run-tests:
    # The type of runner that the job will run on
    strategy:
      max-parallel: 1
    runs-on: ubuntu-latest
    timeout-minutes: 30

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
#       - name: Checkout the project
#         uses: actions/checkout@master

#       - name: Set up Python 3.7
#         uses: actions/setup-python@v2
#         with:
#           python-version: 3.7

#       - name: Install dependancies
#         run: |
#           pip install -r requirements.txt

#       - name: Move into project directory
#         run: |
#           echo "Currently in project directory"
#           pwd

#       - name: Build docker images
#         run: |
#             cd repo_pkg
#             docker build -t local .
#       - name: Run tests
#         run: docker run --rm local

      
      - name: Github context
        run: |
          echo ${{ github.ref }}
          echo ${{ github.base_ref  }}
          echo ${{ job.status }}
          echo ${process.env}
          echo ${GIT_COMMITTER_NAME}
          
      - name: Run tests
        run: |
          echo "simulate a fail"
          exit 1
          
      - name: Slack notification
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: workflow,job,commit,repo,ref,author,took
          custom_payload: |
            {
            username: 'github-actions-tests',
            icon_emoji: ':octocat:',
            attachments: [{
              color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
              text: `Build ${process.env.AS_WORKFLOW}(${process.env.AS_COMMIT}) of ${process.env.AS_REPO}@${process.env.AS_REF} by ${GIT_COMMITTER_NAME} failed in ${process.env.AS_TOOK}`
            }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
        if: failure()
